{"version":3,"sources":["components/Navbar.js","containers/MainContainer.js","components/Github.js","store/modules/action.js","store/modules/cart.js","containers/GithubContainer.js","components/Cart.js","containers/CartContainer.js","App.js","store/modules/index.js","index.js"],"names":["Navbar","total","this","props","className","data-test","type","id","htmlFor","to","Component","connect","state","cart","MainContainer","children","Github","setData","e","setState","target","value","keyPress","key","onSelectedID","bind","pending","error","repeated","data","onSelectedCart","placeholder","onChange","onKeyPress","onClick","map","el","index","login","public_repos","src","avatar_url","alt","style","width","height","href","html_url","rel","GET_POST_PEDNING","GET_POST_SUCCESS","GET_POST_FAILURE","ADD_CART","INCREMENT","DECREMENT","REMOVE","getPost","githubID","dispatch","axios","get","getPostAPI","then","res","payload","catch","err","initialState","quantity","GithubContainer","addGithub","addCart","Cart","newData","onSelectedIncrement","onSelectedDecrement","onSelectedRemove","CartContainer","increment","decrement","remove","filter","App","exact","path","component","combineReducers","action","repeatedFlag","i","length","concat","elQuantity","store","createStore","rootReducer","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"iXAOMA,G,uLACO,IAEGC,EAAUC,KAAKC,MAAfF,MAER,OACI,yBAAKG,UAAU,SAASC,YAAU,mBAC9B,6BACI,2BAAOC,KAAK,WAAWC,GAAG,MAAMH,UAAU,WAC1C,2BAAOI,QAAQ,MAAMJ,UAAU,WAC3B,4BACA,4BACA,6BAGJ,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMK,GAAG,KAAT,gBAGJ,yBAAKL,UAAU,cAAcC,YAAU,cACnC,4BACI,4BAAI,kBAAC,IAAD,CAAMI,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SAAwBR,EAAxB,c,GAtBXS,cAyCNC,cANS,SAACC,GACrB,MAAO,CACHX,MAAQW,EAAMC,KAAKZ,QAIZU,CAEbX,GC/CmBc,E,iLAEb,OACI,6BACI,kBAAC,EAAD,MACCZ,KAAKC,MAAMY,c,GALeL,a,QCCtBM,G,kBAEjB,WAAYb,GAAO,IAAD,8BACd,4CAAMA,KAUVc,QAAU,SAACC,GACP,EAAKC,SAAS,CACVZ,GAAKW,EAAEE,OAAOC,SAbJ,EAiBlBC,SAAW,SAACJ,GACK,UAAVA,EAAEK,KACD,EAAKpB,MAAMqB,aAAa,EAAKZ,MAAML,KAhBvC,EAAKK,MAAQ,CACTL,GAAK,IAGT,EAAKU,QAAU,EAAKA,QAAQQ,KAAb,gBACf,EAAKH,SAAW,EAAKA,SAASG,KAAd,gBARF,E,sEAuBT,IAAD,SAEqEvB,KAAKC,MAAtEuB,EAFJ,EAEIA,QAASC,EAFb,EAEaA,MAAOC,EAFpB,EAEoBA,SAAUC,EAF9B,EAE8BA,KAAML,EAFpC,EAEoCA,aAAcM,EAFlD,EAEkDA,eAEtD,OACI,yBAAK1B,UAAU,UACX,wBAAIA,UAAU,gBAAd,oBACA,2BAAOA,UAAU,eAAeE,KAAK,OAAOyB,YAAY,YAAYC,SAAU9B,KAAKe,QAASgB,WAAY/B,KAAKoB,WAC7G,4BAAQlB,UAAU,gBAAgB8B,QAAS,kBAAMV,EAAa,EAAKZ,MAAML,MAAzE,QACA,6BAAK,6BAAK,6BACTmB,EAAU,wBAAItB,UAAU,kBAAd,cAAiD,KAC3DwB,EAAW,wBAAIxB,UAAU,mBAAd,2BAA+D,KAC1EuB,EAAQ,wBAAIvB,UAAU,gBAAd,oCACL,yBAAKA,UAAU,eACX,2BAAOA,UAAU,gBACb,gCACA,+BACI,4BACI,qCACA,kCACA,oCACA,qCACA,oCACA,qCAEHyB,EAAKM,IAAI,SAACC,EAAIC,GACX,OACI,wBAAId,IAAKc,GACL,4BAAKD,EAAGE,OACR,4BAAKF,EAAG7B,IACR,4BAAK6B,EAAGG,cACR,4BAAI,yBAAKC,IAAKJ,EAAGK,WAAYC,IAAI,GAAGC,MAAO,CAACC,MAAM,OAAQC,OAAQ,WAClE,4BAAI,uBAAGC,KAAMV,EAAGW,SAAU3B,OAAO,SAAS4B,IAAI,uBAA1C,UACJ,4BAAI,4BAAQd,QAAS,kBAAMJ,EAAeM,KAAtC,oB,GA1DZ1B,c,yBCHvBuC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAW,WAGXC,EAAY,YACZC,EAAY,YACZC,EAAS,S,mjBCLf,IAIMC,EAAU,SAACC,GAAD,OAAc,SAACC,GAGlC,OAFAA,EAAU,CAAEpD,KAAO2C,IALG,SAACQ,GACvB,OAAOE,IAAMC,IAAN,uCAA0CH,IAM1CI,CAAWJ,GAAUK,KAAK,SAACC,GAC9BL,EAAU,CAAEpD,KAAO4C,EAAkBc,QAAUD,MAChDE,MAAM,SAACC,GACNR,EAAU,CAAEpD,KAAO6C,EAAkBa,QAAUE,QAoB1CC,EAAe,CACxBzC,SAAU,EACVC,OAAQ,EACRC,UAAW,EACXC,KAAO,CACH,CACIS,MAAQ,cACR/B,GAAK,SACLkC,WAAa,wDACbF,aAAe,KACfQ,SAAW,iCACXqB,SAAW,IAGnBnE,MAAQ,G,IC3CNoE,E,2MAcF7C,aAAe,SAACiC,IAEZD,EADoB,EAAKrD,MAAjBqD,SACAC,I,EAGZ3B,eAAiB,SAACwC,IAEdC,EADoB,EAAKpE,MAAjBoE,SACAD,I,wEAGH,IAAD,EAEuCpE,KAAKC,MAAxCuB,EAFJ,EAEIA,QAASC,EAFb,EAEaA,MAAOC,EAFpB,EAEoBA,SAAUC,EAF9B,EAE8BA,KAElC,OACI,kBAAC,EAAD,CACIH,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,KAAMA,EACNL,aAActB,KAAKsB,aACnBM,eAAgB5B,KAAK4B,qB,GAnCPpB,aAyDfC,cAhBS,SAACC,GACrB,MAAO,CACHc,QAAUd,EAAMC,KAAKa,QACrBC,MAAQf,EAAMC,KAAKc,MACnBC,SAAWhB,EAAMC,KAAKe,SACtBC,KAAOjB,EAAMC,KAAKgB,OAIC,SAAC6B,GACxB,MAAO,CACHF,QAAU,SAACC,GAAeC,EAASF,EAAQC,KAC3Cc,QAAU,SAACD,GAAgBZ,EDxCZ,SAACY,GAAD,OAAe,SAACZ,GACnCA,EAAU,CAAEpD,KAAO8C,EAAUY,QAAUM,KCuCCC,CAAQD,OAIrC3D,CAGb0D,GCtBaG,G,MAvCF,SAAC,GAAsF,IAAnFvE,EAAkF,EAAlFA,MAAOwE,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,oBAAqBC,EAA6C,EAA7CA,oBAAqBC,EAAwB,EAAxBA,iBACvE,OACI,yBAAKxE,UAAU,aACX,2BAAOA,UAAU,cACb,4CAAkBH,GAClB,gCACA,+BACI,4BACI,qCACA,kCACA,oCACA,qCACA,oCACA,wCACA,mCACA,mCACA,uCAEHwE,EAAQtC,IAAI,SAACC,EAAIC,GACd,OACI,wBAAId,IAAKc,GACL,4BAAKD,EAAGE,OACR,4BAAKF,EAAG7B,IACR,4BAAK6B,EAAGG,cACR,4BAAI,yBAAKC,IAAKJ,EAAGK,WAAYC,IAAI,GAAGC,MAAO,CAACC,MAAM,OAAQC,OAAQ,WAClE,4BAAI,uBAAGC,KAAMV,EAAGW,SAAU3B,OAAO,SAAS4B,IAAI,uBAA1C,UACJ,4BAAKZ,EAAGgC,UACR,4BAAI,4BAAQlC,QAAS,kBAAMwC,EAAoBtC,KAA3C,MACJ,4BAAI,4BAAQF,QAAS,kBAAMyC,EAAoBvC,KAA3C,MACJ,4BAAI,4BAAQF,QAAS,kBAAM0C,EAAiBxC,KAAxC,cC5B9ByC,E,2MAEFH,oBAAsB,SAAC7C,IAEnBiD,EADsB,EAAK3E,MAAnB2E,WACEjD,I,EAGd8C,oBAAsB,SAAC9C,IAEnBkD,EADsB,EAAK5E,MAAnB4E,WACElD,I,EAGd+C,iBAAmB,SAAC/C,IAEhBmD,EADmB,EAAK7E,MAAhB6E,QACDnD,I,wEAGF,IAAD,EAEoB3B,KAAKC,MAArBF,EAFJ,EAEIA,MAGJwE,EALA,EAEW5C,KAGIoD,OAAO,SAAC7C,GACvB,OAAOA,EAAGgC,SAAW,IAGzB,OACI,kBAAC,EAAD,CACInE,MAAOA,EACPwE,QAASA,EACTC,oBAAqBxE,KAAKwE,oBAC1BC,oBAAqBzE,KAAKyE,oBAC1BC,iBAAkB1E,KAAK0E,uB,GAhCXlE,aAqDbC,cAfS,SAACC,GACrB,MAAO,CACHX,MAAQW,EAAMC,KAAKZ,MACnB4B,KAAOjB,EAAMC,KAAKgB,OAIC,SAAC6B,GACxB,MAAO,CACHoB,UAAY,SAACjD,GAAW6B,EH9BP,SAAC7B,GACtB,MAAO,CAAEvB,KAAO+C,EAAWW,QAAUnC,GG6BAiD,CAAUjD,KAC3CkD,UAAY,SAAClD,GAAW6B,EH3BP,SAAC7B,GACtB,MAAO,CAAEvB,KAAOgD,EAAWU,QAAUnC,GG0BAkD,CAAUlD,KAC3CmD,OAAS,SAACnD,GAAW6B,EHxBP,SAAC7B,GACnB,MAAO,CAAEvB,KAAOiD,EAAQS,QAAUnC,GGuBAmD,CAAOnD,OAI9BlB,CAGbkE,GCrDmBK,E,iLAEjB,OACE,kBAAC,IAAD,KACE,yBAAK9E,UAAU,OAEb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOe,KAAK,eAAeC,UAAWhB,IACtC,kBAAC,IAAD,CAAOe,KAAK,QAAQC,UAAWR,W,GAXVnE,a,QCJlB4E,cAAgB,CAC3BzE,KLwDW,WAA6C,IAA/BD,EAA8B,uDAAtBuD,EAAcoB,EAAQ,uCAEvD,OAAOA,EAAOjF,MAEV,KAAK2C,EACD,OAAO,EAAP,GAAYrC,EAAZ,CAAmBc,SAAU,EAAMC,OAAQ,EAAOC,UAAW,IAEjE,KAAKsB,EAGD,IAFA,IAAIsC,GAAe,EAEXC,EAAE,EAAGA,EAAE7E,EAAMiB,KAAK6D,OAAQD,IAAI,CAClC,GAAG7E,EAAMiB,KAAK4D,GAAGlF,KAAOgF,EAAOvB,QAAQnC,KAAKtB,GAAG,CAC3CiF,GAAe,EACf,MAGAA,GAAe,EAGvB,OACW,EAAP,GAAY5E,GADI,IAAjB4E,EACC,CAAmB9D,SAAU,EAAOC,OAAQ,EAAOC,UAAW,GAG9D,CAAmBF,SAAU,EAAOC,OAAQ,EAAOC,UAAW,EAAOC,KAAOjB,EAAMiB,KAAK8D,OAAO,CAC1FrD,MAAQiD,EAAOvB,QAAQnC,KAAKS,MAC5B/B,GAAKgF,EAAOvB,QAAQnC,KAAKtB,GACzBkC,WAAa8C,EAAOvB,QAAQnC,KAAKY,WACjCF,aAAegD,EAAOvB,QAAQnC,KAAKU,aACnCQ,SAAWwC,EAAOvB,QAAQnC,KAAKkB,SAC/BqB,SAAW,MAIvB,KAAKjB,EACD,OAAO,EAAP,GAAYvC,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAMC,UAAW,IAEjE,KAAKwB,EAOD,OANAxC,EAAMiB,KAAKM,IAAI,SAACC,GAIZ,OAHGA,EAAG7B,KAAOgF,EAAOvB,QAAQzD,IACxB6B,EAAGgC,WAEA,EAAP,GAAYxD,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAOC,UAAW,EAAO3B,MAAQW,EAAMX,MAAQ,MAExF,EAAP,GAAYW,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAOC,UAAW,EAAO3B,MAAQW,EAAMX,MAAQ,IAgB/F,KAAKoD,EAOD,OANAzC,EAAMiB,KAAKM,IAAI,SAACC,GAIZ,OAHGA,EAAG7B,KAAOgF,EAAOvB,QAAQzD,IACxB6B,EAAGgC,WAEA,EAAP,GAAYxD,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAO1B,MAAQW,EAAMX,MAAQ,MAEtE,EAAP,GAAYW,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAO1B,MAAQW,EAAMX,MAAQ,IAE7E,KAAKqD,EAOD,OANA1C,EAAMiB,KAAKM,IAAI,SAACC,GAIZ,OAHGA,EAAG7B,KAAOgF,EAAOvB,QAAQzD,IACxB6B,EAAGgC,WAEA,EAAP,GAAYxD,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAO1B,MAAQW,EAAMX,MAAQ,MAEtE,EAAP,GAAYW,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAO1B,MAAQW,EAAMX,MAAQ,IAE7E,KAAKsD,EACD,IAAIqC,EAAa,EAYjB,OAXAhF,EAAMiB,KAAKM,IAAI,SAACC,GASZ,OARGA,EAAG7B,KAAOgF,EAAOvB,QAAQzD,KACxBqF,EAAaxD,EAAGgC,SAChBhC,EAAGgC,SAAW,GAMX,EAAP,GAAYxD,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAO1B,MAAQW,EAAMX,MAAQ2F,MAEtE,EAAP,GAAYhF,EAAZ,CAAmBc,SAAU,EAAOC,OAAQ,EAAO1B,MAAQW,EAAMX,MAAQ2F,IAE7E,QACI,OAAOhF,M,QMhJbiF,EAAQC,YAAYC,EAAaC,YAAgBC,MAEvDC,IAASC,OACT,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OACSO,SAASC,eAAe,W","file":"static/js/main.b3b45a1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './scss/Navbar.scss';\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n\r\n        const { total } = this.props;\r\n\r\n        return(\r\n            <div className=\"navbar\" data-test=\"navbarComponent\">\r\n                <nav>\r\n                    <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n                    <label htmlFor=\"nav\" className=\"nav-btn\">\r\n                        <i></i>\r\n                        <i></i>\r\n                        <i></i>\r\n                    </label>\r\n\r\n                    <div className=\"logo\">\r\n                        <Link to=\"/\">Github Cart</Link>\r\n                    </div>\r\n\r\n                    <div className=\"nav-wrapper\" data-test=\"navwrapper\">\r\n                        <ul>\r\n                            <li><Link to=\"/\">Home</Link></li>\r\n                            <li><Link to=\"/cart\">Cart ({total})</Link></li>\r\n                            \r\n                            {/* 'a' link reload the page (In other words, the value of state will be initialized) \r\n                            Alternatively, 'Link' shows the page without reloading. So, it is possible to retain the value of state */}\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        total : state.cart.total\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Navbar);\r\n\r\n// Validate props\r\nNavbar.propTypes = {\r\n    total : PropTypes.number\r\n};","import React, { Component } from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport default class MainContainer extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './scss/Github.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Github extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id : ''\r\n        }\r\n\r\n        this.setData = this.setData.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n    };\r\n\r\n    setData = (e) => {\r\n        this.setState({\r\n            id : e.target.value\r\n        })\r\n    };\r\n\r\n    keyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            this.props.onSelectedID(this.state.id);\r\n        }\r\n    };\r\n\r\n    render(){\r\n\r\n        const { pending, error, repeated, data, onSelectedID, onSelectedCart } = this.props;\r\n\r\n        return(\r\n            <div className=\"github\">\r\n                <h1 className=\"github-title\">Search Github ID</h1>\r\n                <input className=\"github-input\" type=\"text\" placeholder=\"Github ID\" onChange={this.setData} onKeyPress={this.keyPress} />\r\n                <button className=\"github-button\" onClick={() => onSelectedID(this.state.id)}>SEND</button>\r\n                <br/><br/><br/>\r\n                {pending ? <h3 className=\"github-loading\">Loading...</h3> : null}\r\n                {repeated ? <h3 className=\"github-repeated\">You have already added.</h3> : null}\r\n                {error ? <h3 className=\"github-error\">Error... (Please put correct ID)</h3> : (\r\n                    <div className=\"github-data\">\r\n                        <table className=\"github-table\">\r\n                            <thead></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Login</th>\r\n                                    <th>ID</th>\r\n                                    <th>Repo</th>\r\n                                    <th>Image</th>\r\n                                    <th>Link</th>\r\n                                    <th>Cart</th>\r\n                                </tr>\r\n                                {data.map((el, index) => {\r\n                                    return(\r\n                                        <tr key={index}>\r\n                                            <td>{el.login}</td>\r\n                                            <td>{el.id}</td>\r\n                                            <td>{el.public_repos}</td>\r\n                                            <td><img src={el.avatar_url} alt=\"\" style={{width:\"25px\", height: \"25px\"}} /></td>\r\n                                            <td><a href={el.html_url} target=\"_blank\" rel=\"noopener noreferrer\">Click</a></td>\r\n                                            <td><button onClick={() => onSelectedCart(el)}>Cart</button></td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Validate props\r\nGithub.propTypes = {\r\n    pending : PropTypes.bool,\r\n    error : PropTypes.bool,\r\n    repeated : PropTypes.bool,\r\n    data : PropTypes.arrayOf(PropTypes.shape({\r\n        login : PropTypes.string,\r\n        id : PropTypes.number,\r\n        avatar_url : PropTypes.string,\r\n        public_repos : PropTypes.string,\r\n        html_url : PropTypes.string,\r\n        quantity : PropTypes.number\r\n    }))\r\n};","/* GithubContainer */\r\nexport const GET_POST_PEDNING = 'GET_POST_PENDING';\r\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE';\r\nexport const ADD_CART = 'ADD_CART';\r\n\r\n/* CartContainer */\r\nexport const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const REMOVE = 'REMOVE';","import axios from 'axios';\r\nimport { GET_POST_PEDNING, GET_POST_SUCCESS, GET_POST_FAILURE, ADD_CART, INCREMENT, DECREMENT, REMOVE } from './action';\r\n\r\n/* Action Functions */\r\nexport const getPostAPI = (githubID) => {\r\n    return axios.get(`https://api.github.com/users/${githubID}`);\r\n};\r\n\r\nexport const getPost = (githubID) => (dispatch) => {\r\n    dispatch( { type : GET_POST_PEDNING } );\r\n\r\n    return getPostAPI(githubID).then((res) => {\r\n        dispatch( { type : GET_POST_SUCCESS, payload : res } );\r\n    }).catch((err) => {\r\n        dispatch( { type : GET_POST_FAILURE, payload : err } );\r\n    })\r\n};\r\n\r\nexport const addCart = (addGithub) => (dispatch) => {\r\n    dispatch( { type : ADD_CART, payload : addGithub } );\r\n};\r\n\r\nexport const increment = (data) => {\r\n    return { type : INCREMENT, payload : data };\r\n};\r\n\r\nexport const decrement = (data) => {\r\n    return { type : DECREMENT, payload : data };\r\n};\r\n\r\nexport const remove = (data) => {\r\n    return { type : REMOVE, payload : data };\r\n};\r\n\r\nexport const initialState = {\r\n    pending : false,\r\n    error : false,\r\n    repeated : false,\r\n    data : [\r\n        {\r\n            login : 'Cool-Hongsi',\r\n            id : 39789641,\r\n            avatar_url : 'https://avatars3.githubusercontent.com/u/39789641?v=4',\r\n            public_repos : '31',\r\n            html_url : 'https://github.com/Cool-Hongsi',\r\n            quantity : 0\r\n        }\r\n    ],\r\n    total : 0\r\n    // cartData : [\r\n    //     {\r\n    //         login : '',\r\n    //         id : '',\r\n    //         avatar_url : '',\r\n    //         public_repos : '',\r\n    //         quantity : 0\r\n    //     }\r\n    // ]\r\n};\r\n\r\n/* Cart Reducer */\r\nexport default function cart(state = initialState, action) {\r\n\r\n    switch(action.type){\r\n\r\n        case GET_POST_PEDNING:\r\n            return { ...state, pending : true, error : false, repeated : true };\r\n\r\n        case GET_POST_SUCCESS:\r\n            let repeatedFlag = false; // To check whether added data is already exist or not\r\n            // If I use the 'map' method, it will create array\r\n            for(let i=0; i<state.data.length; i++){\r\n                if(state.data[i].id === action.payload.data.id){\r\n                    repeatedFlag = true;\r\n                    break; // Once it finds the repeated value, then stop for looping\r\n                }\r\n                else{\r\n                    repeatedFlag = false;\r\n                }\r\n            }\r\n            if(repeatedFlag === true){\r\n                return { ...state, pending : false, error : false, repeated : true };\r\n            }\r\n            else{\r\n                return { ...state, pending : false, error : false, repeated : false, data : state.data.concat({\r\n                    login : action.payload.data.login,\r\n                    id : action.payload.data.id,\r\n                    avatar_url : action.payload.data.avatar_url,\r\n                    public_repos : action.payload.data.public_repos,\r\n                    html_url : action.payload.data.html_url,\r\n                    quantity : 0\r\n                }) };\r\n            }\r\n\r\n        case GET_POST_FAILURE:\r\n            return { ...state, pending : false, error : true, repeated : false };\r\n\r\n        case ADD_CART:\r\n            state.data.map((el) => {\r\n                if(el.id === action.payload.id){\r\n                    el.quantity++;\r\n                }\r\n                return { ...state, pending : false, error : false, repeated : false, total : state.total + 1 };\r\n            });\r\n            return { ...state, pending : false, error : false, repeated : false, total : state.total + 1 };\r\n\r\n            // state.cartData.map((el) => {\r\n            //     if(el.id === action.payload.id){\r\n            //         el.quantity += 1;\r\n            //         return { ...state, pending : false, error : false, total : state.total + 1 };\r\n            //     }\r\n            // });\r\n            // return { ...state, pending : false, error : false, total : state.total + 1, cartData : state.cartData.concat({\r\n            //     login : action.payload.login,\r\n            //     id : action.payload.id,\r\n            //     avatar_url : action.payload.avatar_url,\r\n            //     public_repos : action.payload.public_repos,\r\n            //     quantity : action.count + 1\r\n            // })}\r\n\r\n        case INCREMENT:\r\n            state.data.map((el) => {\r\n                if(el.id === action.payload.id){\r\n                    el.quantity++;\r\n                }\r\n                return { ...state, pending : false, error : false, total : state.total + 1 };\r\n            })\r\n            return { ...state, pending : false, error : false, total : state.total + 1 };\r\n\r\n        case DECREMENT:\r\n            state.data.map((el) => {\r\n                if(el.id === action.payload.id){\r\n                    el.quantity--;\r\n                }\r\n                return { ...state, pending : false, error : false, total : state.total - 1 };\r\n            })\r\n            return { ...state, pending : false, error : false, total : state.total - 1 };\r\n\r\n        case REMOVE:\r\n            var elQuantity = 0;\r\n            state.data.map((el) => {\r\n                if(el.id === action.payload.id){\r\n                    elQuantity = el.quantity;\r\n                    el.quantity = 0;\r\n                    // If I do below, the data in array will be deleted. Then it can not show in Mainpage.\r\n                    // Alternatively, make the value of quantity as '0' in order to remain the data in Mainpage and not show in cart page\r\n                    // let index = state.data.indexOf(el);\r\n                    // state.data.splice(index, 1);                    \r\n                }   \r\n                return { ...state, pending : false, error : false, total : state.total - elQuantity };\r\n            })\r\n            return { ...state, pending : false, error : false, total : state.total - elQuantity };\r\n            \r\n        default:\r\n            return state\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Github from '../components/Github';\r\nimport { getPost, addCart } from '../store/modules/cart';\r\n\r\nclass GithubContainer extends Component{\r\n\r\n    // componentDidMount = () => {\r\n    //     const { number, getPost } = this.props;\r\n    //     getPost(number);\r\n    // };\r\n\r\n    // componentWillReceiveProps = (nextProps) => {\r\n    //     const { number, getPost } = this.props;\r\n    //     if(number !== nextProps.number){\r\n    //         getPost(nextProps.number);\r\n    //     }\r\n    // };\r\n\r\n    onSelectedID = (githubID) => {\r\n        const { getPost } = this.props;\r\n        getPost(githubID);\r\n    };\r\n\r\n    onSelectedCart = (addGithub) => {\r\n        const { addCart } = this.props;\r\n        addCart(addGithub);\r\n    };\r\n\r\n    render(){\r\n\r\n        const { pending, error, repeated, data } = this.props;\r\n\r\n        return(\r\n            <Github\r\n                pending={pending}\r\n                error={error}\r\n                repeated={repeated}\r\n                data={data}\r\n                onSelectedID={this.onSelectedID}\r\n                onSelectedCart={this.onSelectedCart}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pending : state.cart.pending,\r\n        error : state.cart.error,\r\n        repeated : state.cart.repeated,\r\n        data : state.cart.data\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPost : (githubID) => { dispatch(getPost(githubID)) },\r\n        addCart : (addGithub) => { dispatch(addCart(addGithub)) }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GithubContainer);","import React from 'react';\r\nimport './scss/Cart.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cart = ( { total, newData, onSelectedIncrement, onSelectedDecrement, onSelectedRemove } ) => {\r\n    return(\r\n        <div className=\"cart-page\">\r\n            <table className=\"cart-table\">\r\n                <caption>Total : {total}</caption>\r\n                <thead></thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Login</th>\r\n                        <th>ID</th>\r\n                        <th>Repo</th>\r\n                        <th>Image</th>\r\n                        <th>Link</th>\r\n                        <th>quantity</th>\r\n                        <th>Inc</th>\r\n                        <th>Dec</th>\r\n                        <th>Remove</th>\r\n                    </tr>\r\n                    {newData.map((el, index) => {\r\n                        return(\r\n                            <tr key={index}>\r\n                                <td>{el.login}</td>\r\n                                <td>{el.id}</td>\r\n                                <td>{el.public_repos}</td>\r\n                                <td><img src={el.avatar_url} alt=\"\" style={{width:\"25px\", height: \"25px\"}} /></td>\r\n                                <td><a href={el.html_url} target=\"_blank\" rel=\"noopener noreferrer\">Click</a></td>\r\n                                <td>{el.quantity}</td>\r\n                                <td><button onClick={() => onSelectedIncrement(el)}>+</button></td>\r\n                                <td><button onClick={() => onSelectedDecrement(el)}>-</button></td>\r\n                                <td><button onClick={() => onSelectedRemove(el)}>X</button></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cart;\r\n\r\n// Validate props\r\nCart.propTypes = {\r\n    total : PropTypes.number,\r\n    newData : PropTypes.arrayOf(PropTypes.shape({\r\n        login : PropTypes.string,\r\n        id : PropTypes.number,\r\n        avatar_url : PropTypes.string,\r\n        public_repos : PropTypes.string,\r\n        html_url : PropTypes.string,\r\n        quantity : PropTypes.number\r\n    }))\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Cart from '../components/Cart';\r\nimport { increment, decrement, remove } from '../store/modules/cart';\r\n\r\nclass CartContainer extends Component{\r\n\r\n    onSelectedIncrement = (data) => {\r\n        const { increment } = this.props;\r\n        increment(data);\r\n    };\r\n\r\n    onSelectedDecrement = (data) => {\r\n        const { decrement } = this.props;\r\n        decrement(data);\r\n    };\r\n\r\n    onSelectedRemove = (data) => {\r\n        const { remove } = this.props;\r\n        remove(data);\r\n    };\r\n\r\n    render(){\r\n\r\n        const { total, data } = this.props;\r\n\r\n        /* As long as the quantity value of state data array is 0, can NOT show it to the page */\r\n        let newData = data.filter((el) => {\r\n            return el.quantity > 0;\r\n        });\r\n\r\n        return(\r\n            <Cart\r\n                total={total}\r\n                newData={newData}\r\n                onSelectedIncrement={this.onSelectedIncrement}\r\n                onSelectedDecrement={this.onSelectedDecrement}\r\n                onSelectedRemove={this.onSelectedRemove}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        total : state.cart.total,\r\n        data : state.cart.data\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increment : (data) => { dispatch(increment(data)) },\r\n        decrement : (data) => { dispatch(decrement(data)) },\r\n        remove : (data) => { dispatch(remove(data)) }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CartContainer);","import React, { Component } from 'react';\nimport './App.scss';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MainContainer from './containers/MainContainer';\nimport GithubContainer from './containers/GithubContainer';\nimport CartContainer from './containers/CartContainer';\n\nexport default class App extends Component{\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n\n          <MainContainer />\n\n          <Switch>\n            <Route exact path=\"/\" component={GithubContainer} />\n            <Route path=\"/Github-Cart\" component={GithubContainer} />\n            <Route path=\"/cart\" component={CartContainer} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}","import { combineReducers } from 'redux';\r\nimport cart from './cart';\r\n\r\n// Root Reducer\r\nexport default combineReducers({\r\n    cart,\r\n    // Other Reducers\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './store/modules/index';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n<Provider store={store}>\n    <App />    \n</Provider>, document.getElementById('root'));"],"sourceRoot":""}